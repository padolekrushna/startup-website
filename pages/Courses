import React, { useState, useEffect } from 'react';
import { Course } from '@/entities/Course';
import { User } from '@/entities/User';
import { Button } from '@/components/ui/button';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Badge } from '@/components/ui/badge';
import { Link } from 'react-router-dom';
import { createPageUrl } from '@/utils';
import { GraduationCap, Plus, WifiOff, Play, Star, Users } from 'lucide-react';

export default function CoursesPage() {
    const [courses, setCourses] = useState([]);
    const [loading, setLoading] = useState(true);
    const [user, setUser] = useState(null);
    const [error, setError] = useState(null);

    const fetchData = async () => {
        setLoading(true);
        setError(null);
        try {
            const userData = await User.me();
            setUser(userData);
        } catch (e) {
            setUser(null);
        }
        
        try {
            const courseData = await Course.list("-created_date");
            setCourses(courseData);
        } catch (err) {
            console.error("Error loading courses:", err);
            setError("Could not load courses. Please check your connection and try again.");
        }

        setLoading(false);
    };

    useEffect(() => {
        fetchData();
    }, []);

    const categoryColors = {
        beginner: "bg-green-100 text-green-800",
        intermediate: "bg-yellow-100 text-yellow-800",
        advanced: "bg-red-100 text-red-800",
        dax: "bg-purple-100 text-purple-800",
        data_modeling: "bg-blue-100 text-blue-800"
    };

    if (loading) {
        return (
            <div className="min-h-screen flex items-center justify-center bg-gradient-to-br from-slate-50 via-blue-50 to-indigo-50 p-4">
                <div className="text-center">
                    <div className="animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto mb-4"></div>
                    <p className="text-slate-600">Loading courses...</p>
                </div>
            </div>
        );
    }

    if (error) {
        return (
            <div className="min-h-screen flex flex-col items-center justify-center bg-gradient-to-br from-slate-50 via-blue-50 to-indigo-50 p-4 lg:p-8">
                <WifiOff className="w-16 lg:w-24 h-16 lg:h-24 text-red-500 mb-4 lg:mb-6" />
                <h1 className="text-2xl lg:text-3xl font-bold mb-2">Connection Error</h1>
                <p className="text-slate-600 text-base lg:text-lg mb-4 lg:mb-6 text-center px-4">{error}</p>
                <Button onClick={fetchData}>Try Again</Button>
            </div>
        );
    }

    return (
        <div className="min-h-screen bg-gradient-to-br from-slate-50 via-blue-50 to-indigo-50 p-4 lg:p-8">
            <div className="max-w-7xl mx-auto">
                {/* Header */}
                <div className="flex flex-col sm:flex-row justify-between items-start sm:items-center gap-4 mb-6 lg:mb-8">
                    <div className="flex items-center gap-3">
                        <GraduationCap className="w-8 h-8 text-blue-600" />
                        <div>
                            <h1 className="text-3xl lg:text-4xl font-bold text-slate-900">Power BI Courses</h1>
                            <p className="text-slate-600 text-sm lg:text-base">Master Power BI with expert-led video courses</p>
                        </div>
                    </div>
                    {user && (
                        <Link to={createPageUrl('UploadCourse')}>
                            <Button className="bg-gradient-to-r from-blue-600 to-indigo-700 hover:from-blue-700 hover:to-indigo-800 gap-2 w-full sm:w-auto">
                                <Plus className="w-4 h-4" />
                                Create Course
                            </Button>
                        </Link>
                    )}
                </div>

                {/* Courses Grid */}
                {courses.length === 0 ? (
                    <Card className="text-center py-12 lg:py-16 bg-white/80 backdrop-blur-sm border-0 shadow-lg">
                        <CardContent>
                            <GraduationCap className="w-16 lg:w-24 h-16 lg:h-24 text-slate-300 mx-auto mb-4 lg:mb-6" />
                            <h3 className="text-xl lg:text-2xl font-semibold text-slate-700 mb-2">No courses available yet</h3>
                            <p className="text-slate-500 mb-4 lg:mb-6 px-4">Be the first to share your Power BI expertise with the community</p>
                            {user && (
                                <Link to={createPageUrl('UploadCourse')}>
                                    <Button className="bg-gradient-to-r from-blue-600 to-indigo-700 hover:from-blue-700 hover:to-indigo-800 gap-2">
                                        <Plus className="w-4 h-4" />
                                        Create First Course
                                    </Button>
                                </Link>
                            )}
                        </CardContent>
                    </Card>
                ) : (
                    <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4 lg:gap-8">
                        {courses.map((course) => (
                            <Card key={course.id} className="group hover:shadow-xl transition-all duration-300 bg-white/80 backdrop-blur-sm border-0 shadow-lg hover:-translate-y-1">
                                <div className="aspect-video bg-gradient-to-br from-slate-100 to-slate-200 rounded-t-lg overflow-hidden relative">
                                    {course.is_free && (
                                        <Badge className="absolute top-3 right-3 bg-green-500 text-white border-0 z-10">Free</Badge>
                                    )}
                                    {course.preview_image ? (
                                        <img 
                                            src={course.preview_image} 
                                            alt={course.title}
                                            className="w-full h-full object-cover group-hover:scale-105 transition-transform duration-300"
                                        />
                                    ) : (
                                        <div className="w-full h-full flex items-center justify-center">
                                            <Play className="w-12 lg:w-16 h-12 lg:h-16 text-slate-400" />
                                        </div>
                                    )}
                                    <div className="absolute inset-0 bg-black/20 group-hover:bg-black/10 transition-colors duration-300"></div>
                                    <div className="absolute bottom-3 left-3 right-3">
                                        <Badge className={`${categoryColors[course.category] || 'bg-gray-100 text-gray-800'} border-0 font-medium`}>
                                            {course.category?.replace('_', ' ').toUpperCase()}
                                        </Badge>
                                    </div>
                                </div>
                                
                                <CardHeader className="pb-3 p-4 lg:p-6">
                                    <CardTitle className="text-lg lg:text-xl font-bold text-slate-900 leading-tight mb-2">
                                        {course.title}
                                    </CardTitle>
                                    <p className="text-slate-600 text-sm line-clamp-2">{course.description}</p>
                                </CardHeader>
                                
                                <CardContent className="pt-0 p-4 lg:p-6 pb-4">
                                    <div className="flex items-center justify-between">
                                        <div className="text-right">
                                            {course.is_free ? (
                                                <div className="text-xl lg:text-2xl font-bold text-green-600">Free</div>
                                            ) : (
                                                <div className="text-xl lg:text-2xl font-bold text-slate-900">${course.price}</div>
                                            )}
                                        </div>
                                        <div className="flex items-center gap-4 text-xs text-slate-500">
                                            <span className="flex items-center gap-1">
                                                <Users className="w-3 h-3" />
                                                0 students
                                            </span>
                                            <span className="flex items-center gap-1">
                                                <Star className="w-3 h-3" />
                                                New
                                            </span>
                                        </div>
                                    </div>
                                </CardContent>
                                
                                <div className="p-4 lg:p-6 pt-0">
                                    <Button className="w-full bg-gradient-to-r from-blue-600 to-indigo-700 hover:from-blue-700 hover:to-indigo-800 text-white border-0 h-10 lg:h-12 font-medium rounded-xl shadow-lg">
                                        {course.is_free ? 'Start Learning' : 'Enroll Now'}
                                    </Button>
                                </div>
                            </Card>
                        ))}
                    </div>
                )}
            </div>
        </div>
    );
}
